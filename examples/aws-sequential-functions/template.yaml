AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Add Three Numbers

  SAM Template for the example of adding three numbers together
  
Parameters:
  Application:
    Type: String
    Default: Omahdog-AddThreeNumbers
        
Globals:
  Function:
    Timeout: 3
    CodeUri: dist/
    Runtime: nodejs12.x

Resources:

  FlowExchangeTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub ${Application}-FlowExchangeTopic
      DisplayName: Topic for request & response messages

  FlowInstanceTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: !Sub ${Application}-FlowInstanceTable

  FlowResultTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: !Sub ${Application}-FlowResultTable
  
  WireTapFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${Application}-WireTapFunction
      Handler: wireTapLambda.handler
      Events:
        NotificationTopic:
          Type: SNS
          Properties:
            Topic: !Ref FlowExchangeTopic
  
  AddThreeNumbersHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${Application}-AddThreeNumbersHandler
      Handler: requestLambdas.addThreeNumbersHandler
      Policies:
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt FlowExchangeTopic.TopicName
        - DynamoDBCrudPolicy:
            TableName: !Ref FlowInstanceTable
      Environment:
        Variables:
          # If this flow wanted to call other Lambdas directly, then it would need the ARN of them here
          FLOW_EXCHANGE_TOPIC_ARN: !Ref FlowExchangeTopic
          FLOW_INSTANCE_TABLE_NAME: !Ref FlowInstanceTable
      Events:
        NotificationTopic:
          Type: SNS
          Properties:
            Topic: !Ref FlowExchangeTopic
            FilterPolicy:
              MessageType:
                - AddThreeNumbersRequest:Handler
                - AddThreeNumbersHandler:Response
  
  SumNumbersHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${Application}-SumNumbersHandler
      Handler: requestLambdas.sumNumbersHandler
      Policies:
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt FlowExchangeTopic.TopicName
        - DynamoDBCrudPolicy:
            TableName: !Ref FlowInstanceTable
      Environment:
        Variables:
          FLOW_EXCHANGE_TOPIC_ARN: !Ref FlowExchangeTopic
          FLOW_INSTANCE_TABLE_NAME: !Ref FlowInstanceTable
      Events:
        NotificationTopic:
          Type: SNS
          Properties:
            Topic: !Ref FlowExchangeTopic
            FilterPolicy:
              MessageType:
                - SumNumbersRequest:Handler
                - SumNumbersHandler:Response
  
  StoreTotalFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${Application}-StoreTotalHandler
      Handler: requestLambdas.storeTotalHandler
      Policies:
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt FlowExchangeTopic.TopicName
        - DynamoDBCrudPolicy:
            TableName: !Ref FlowInstanceTable
        # TODO: How to auto-generate this? The handler would have to expose that it needed such a table
        - DynamoDBCrudPolicy:
            TableName: !Ref FlowResultTable
      Environment:
        Variables:
          FLOW_EXCHANGE_TOPIC_ARN: !Ref FlowExchangeTopic
          FLOW_INSTANCE_TABLE_NAME: !Ref FlowInstanceTable
          # TODO: How to auto-generate this? The handler would have to expose that it needed such a variable
          FLOW_RESULT_TABLE_NAME: !Ref FlowResultTable
      Events:
        NotificationTopic:
          Type: SNS
          Properties:
            Topic: !Ref FlowExchangeTopic
            FilterPolicy:
              MessageType:
                - StoreTotalRequest:Handler
                - StoreTotalHandler:Response

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  WireTapFunction:
    Description: "Function to log all messages published to a topic"
    Value: !GetAtt WireTapFunction.Arn
  WireTapFunctionIamRole:
    Description: "Implicit IAM Role created for WireTapFunction"
    Value: !GetAtt WireTapFunction.Arn
  # TODO: Do we need to output anything else?
