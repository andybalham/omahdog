AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Add Three Numbers

  SAM Template for the example of adding three numbers together
  
Parameters:
  Application:
    Type: String
    Default: Omahdog-AddThreeNumbers
  ApiStageName:
    Type: String
    Default: test
        
Globals:
  Function:
    Timeout: 3
    CodeUri: dist/
    Runtime: nodejs12.x

Resources:

  # ApiGatewayApi:
  #   Type: AWS::Serverless::Api
  #   Properties:
  #     StageName: !Ref ApiStageName

  # ApiFunction: # Adds a GET api endpoint at "/" to the ApiGatewayApi via an Api event
  #   Type: AWS::Serverless::Function
  #   Properties: 
  #     Handler: controllers.handler
  #     Environment:
  #       Variables:
  #         FLOW_EXCHANGE_TOPIC_ARN: !Ref FlowExchangeTopic
  #         # Could we work this out by convention? We would still need the right policy though
  #         ADD_THREE_NUMBERS_FUNCTION_NAME: !Ref AddThreeNumbersHandlerFunction
  #     Policies:
  #       - SNSPublishMessagePolicy:
  #           TopicName: !GetAtt FlowExchangeTopic.TopicName
  #       - LambdaInvokePolicy:
  #           FunctionName: !Ref AddThreeNumbersHandlerFunction
  #     Events:
  #       ApiGetEvent:
  #         Type: Api
  #         Properties:
  #           Path: /get
  #           Method: get
  #           RestApiId:
  #             Ref: ApiGatewayApi
  #       ApiPostEvent:
  #         Type: Api
  #         Properties:
  #           Path: /post
  #           Method: post
  #           RestApiId:
  #             Ref: ApiGatewayApi

  FlowExchangeTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub ${Application}-FlowExchangeTopic
      DisplayName: Topic for request & response messages

  FlowDeadLetterQueueTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub ${Application}-FlowDeadLetterQueueTopic
      DisplayName: Topic for flow dead letter messages

  FlowInstanceTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: !Sub ${Application}-FlowInstanceTable

  # FlowResultTable:
  #   Type: AWS::Serverless::SimpleTable
  #   Properties:
  #     TableName: !Sub ${Application}-FlowResultTable
  
  WireTapFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${Application}-WireTapFunction
      Handler: wireTapLambda.handler
      Events:
        ExchangeTopic:
          Type: SNS
          Properties:
            Topic: !Ref FlowExchangeTopic
        DeadLetterQueueTopic:
          Type: SNS
          Properties:
            Topic: !Ref FlowDeadLetterQueueTopic
  
  DeadLetterQueueFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${Application}-DeadLetterQueueFunction
      Handler: requestLambdas.deadLetterQueueHandler
      Policies:
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt FlowExchangeTopic.TopicName
      Environment:
        Variables:
          FLOW_EXCHANGE_TOPIC_ARN: !Ref FlowExchangeTopic
      Events:
        DeadLetterQueueTopic:
          Type: SNS
          Properties:
            Topic: !Ref FlowDeadLetterQueueTopic
  
  AddThreeNumbersHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${Application}-AddThreeNumbersHandler
      Handler: requestLambdas.addThreeNumbersHandler
      Policies:
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt FlowExchangeTopic.TopicName
        - DynamoDBCrudPolicy:
            TableName: !Ref FlowInstanceTable
        - LambdaInvokePolicy:
            FunctionName: !Ref SumNumbersHandlerFunction
      DeadLetterQueue:
        Type: SNS
        TargetArn: !Ref FlowDeadLetterQueueTopic
      Environment:
        Variables:
          FLOW_EXCHANGE_TOPIC_ARN: !Ref FlowExchangeTopic
          FLOW_INSTANCE_TABLE_NAME: !Ref FlowInstanceTable
          SUM_NUMBERS_FUNCTION_NAME: !Ref SumNumbersHandlerFunction
      Events:
        ExchangeTopic:
          Type: SNS
          Properties:
            Topic: !Ref FlowExchangeTopic
            FilterPolicy:
              MessageType:
                - AddThreeNumbersRequest:Handler
                - AddThreeNumbersHandler:Response
  
  SumNumbersHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${Application}-SumNumbersHandler
      Handler: requestLambdas.sumNumbersHandler
      Policies:
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt FlowExchangeTopic.TopicName
        - DynamoDBCrudPolicy:
            TableName: !Ref FlowInstanceTable
      DeadLetterQueue:
        Type: SNS
        TargetArn: !Ref FlowDeadLetterQueueTopic
      Environment:
        Variables:
          FLOW_EXCHANGE_TOPIC_ARN: !Ref FlowExchangeTopic
          FLOW_INSTANCE_TABLE_NAME: !Ref FlowInstanceTable
      Events:
        ExchangeTopic:
          Type: SNS
          Properties:
            Topic: !Ref FlowExchangeTopic
            FilterPolicy:
              MessageType:
                - SumNumbersRequest:Handler
                - SumNumbersHandler:Response
  
  # StoreTotalFunction:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     FunctionName: !Sub ${Application}-StoreTotalHandler
  #     Handler: requestLambdas.storeTotalHandler
  #     Policies:
  #       - SNSPublishMessagePolicy:
  #           TopicName: !GetAtt FlowExchangeTopic.TopicName
  #       - DynamoDBCrudPolicy:
  #           TableName: !Ref FlowInstanceTable
  #       # TODO: How to auto-generate this? The handler would have to expose that it needed such a table
  #       - DynamoDBCrudPolicy:
  #           TableName: !Ref FlowResultTable
  #     DeadLetterQueue:
  #       Type: SNS
  #       TargetArn: !Ref FlowDeadLetterQueueTopic
  #     Environment:
  #       Variables:
  #         FLOW_EXCHANGE_TOPIC_ARN: !Ref FlowExchangeTopic
  #         FLOW_INSTANCE_TABLE_NAME: !Ref FlowInstanceTable
  #         # TODO: How to auto-generate this? The handler would have to expose that it needed such a variable
  #         FLOW_RESULT_TABLE_NAME: !Ref FlowResultTable
  #     Events:
  #       ExchangeTopic:
  #         Type: SNS
  #         Properties:
  #           Topic: !Ref FlowExchangeTopic
  #           FilterPolicy:
  #             MessageType:
  #               - StoreTotalRequest:Handler
  #               - StoreTotalHandler:Response

# Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  # ApiFunction:
  #   Description: "Function to log handle API calls"
  #   Value: !GetAtt ApiFunction.Arn
  # ApiEndpoint:
  #   Description: "API endpoint"
  #   Value: !Sub "https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/${ApiStageName}/"
  # WireTapFunction:
  #   Description: "Function to log all messages published to a topic"
  #   Value: !GetAtt WireTapFunction.Arn
  # WireTapFunctionIamRole:
  #   Description: "Implicit IAM Role created for WireTapFunction"
  #   Value: !GetAtt WireTapFunction.Arn
  # TODO: Do we need to output anything else?
